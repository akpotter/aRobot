// Generated by CoffeeScript 1.9.3
(function() {
  var Promise, config, dnsmasq, exec, execAsync, hostapd, ref, spawn, started;

  Promise = require('bluebird');

  ref = require('child_process'), spawn = ref.spawn, exec = ref.exec;

  execAsync = Promise.promisify(exec);

  config = require('./config');

  hostapd = require('./hostapd');

  dnsmasq = require('./dnsmasq');

  started = false;

  exports.start = function(manager) {
    if (started) {
      return Promise.resolve();
    }
    started = true;
    console.log('Stopping service, starting hotspot');
    return manager.stop().then(function() {
      return execAsync('rfkill unblock wifi');
    }).then(function() {
      return execAsync("ip addr add " + config.gateway + "/24 dev " + config.iface + " || true");
    }).then(function() {
      return hostapd.start();
    }).then(function() {
      return dnsmasq.start();
    });
  };

  exports.stop = function(manager) {
    if (!started) {
      return Promise.resolve();
    }
    console.log('Starting service, stopping hotspot');
    started = false;
    return Promise.all([hostapd.stop(), dnsmasq.stop()]).then(function() {
      return manager.start();
    });
  };

}).call(this);
